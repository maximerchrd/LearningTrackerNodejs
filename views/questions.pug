extends layout

block content
    include partials/header.pug
    form(method='POST' action='/questions' class="form-inline")
        div.form-group
            select(name='selectionFilter', id='userQuestionsCombobox')
                each filter in questSelectedFilter
                    option(value=filter) #{filter}
        div.form-group
            select(name='subjectFilter')
                each subject in mainSubjects
                    option(value=subject) #{subject}
        div.form-group
            input#keyword.form-control(type='keyword', placeholder='key word', name='keyword')
        div.form-group
            button.btn.btn-primary(type='submit') Search

    form(method='POST' action='/questions' class="form_sign")
        input(type='text' hidden=true placeholder='username' name='selectedQuestions' value='' id='selectedQuestionsField')
        input(type='text' hidden=true placeholder='username' name='unselectedQuestions' value='' id='unselectedQuestionsField')
        button(type='submit', id='saveChangesButton') Save my Changes

    table(style='width:40%', border='1', id='questions_table')
        thead
            tr
                th Question
                th Question Type
                th Picture
                th Rating
                th My Questions
        tbody
            each question, index in data.questions
                tr(onclick="toggleModal(this)")
                    td=question.questionText
                    td=question.questionType
                    td
                        img(src="/users_images/mini_" + question.imageName)
                    td=question.rating
                    td
                        img(id="checkboxImage" + index, src="/images/" + question.userSelected)
                    .modal
                        .modal-content
                            span(class="close-button", onclick="toggleModalClose()") &times;
                            .question-text some text
                            .question-type some type
                            img(src="/users_images/", id="questionImage")
                            div(class='stars') Average rating:
                                span(class="star" id="star1")
                                span(class="star" id="star2")
                                span(class="star" id="star3")
                                span(class="star" id="star4")
                                span(class="star" id="star5")
                            div(class='stars') Your rating:
                                span(class="star" id="ustar1")
                                span(class="star" id="ustar2")
                                span(class="star" id="ustar3")
                                span(class="star" id="ustar4")
                                span(class="star" id="ustar5")
                            button.button-select(onclick="selectQuestion()") Select Question
                    script(type='text/javascript').
                        src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"
                        var modal = document.querySelector(".modal");
                        var selectButton = document.querySelector(".button-select");
                        var saveButton = document.getElementById("saveChangesButton");
                        var userQuesCombo = document.getElementById("userQuestionsCombobox");

                        var questionsArray = !{JSON.stringify(data.questions)};
                        var selectedQuestions = [[]];
                        var unselectedQuestions = [];
                        var currentQuestionIndex = 0;

                        var question_text = document.querySelector(".question-text");
                        var question_type = document.querySelector(".question-type");
                        var questionImage = document.getElementById("questionImage");

                        var numberofcloses = 0;

                        if (!{JSON.stringify(data.currentUser)} == "") {
                            userQuesCombo.disabled = true;
                            saveButton.disabled = true;
                        }

                        function toggleModal(id) {
                            var index = 0;
                            if (typeof id === 'undefined') {
                                index = 1;
                            } else if (id.rowIndex - 1 < questionsArray.length && id.rowIndex - 1 >= 0) {
                                index = id.rowIndex - 1;
                            }
                            currentQuestionIndex = index;
                            question_text.innerHTML = questionsArray[index].questionText;
                            question_type.innerHTML = questionsArray[index].questionType;
                            questionImage.src = "/users_images/" + questionsArray[index].imageName;
                            if (questionImage && questionImage.style) {
                                questionImage.style.height = "300px"
                            }
                            if (!{JSON.stringify(data.currentUser)} == "") {
                                selectButton.disabled = true;
                            } else {
                                if (questionsArray[index].userSelected == "selected.png") {
                                    selectButton.innerHTML = "Unselect Question"
                                } else {
                                    selectButton.innerHTML = "Select Question"
                                }
                            }

                            //set the average rating
                            if (questionsArray[index].rating >= 1) {
                                document.getElementById('star1').className = 'star on';
                            }
                            if (questionsArray[index].rating >= 2) {
                                document.getElementById('star2').className = 'star on';
                            }
                            if (questionsArray[index].rating >= 3) {
                                document.getElementById('star3').className = 'star on';
                            }
                            if (questionsArray[index].rating >= 4) {
                                document.getElementById('star4').className = 'star on';
                            }
                            if (questionsArray[index].rating >= 5) {
                                document.getElementById('star5').className = 'star on';
                            }

                            modal.classList.toggle("show-modal");
                        }

                        function toggleModalClose() {
                            modal.classList.toggle("show-modal");
                        }

                        function selectQuestion() {
                            if (questionsArray[currentQuestionIndex].userSelected == "notselected.png") {
                                questionsArray[currentQuestionIndex].userSelected = "selected.png"

                                //if the question was unselected without saving inbetween, remove it from the unselectedQuestions array
                                if (unselectedQuestions.indexOf(questionsArray[currentQuestionIndex].questionID) != -1) {
                                    var indexToRemove = unselectedQuestions.indexOf(questionsArray[currentQuestionIndex].questionID);
                                    unselectedQuestions.splice(indexToRemove, 1)
                                } else {
                                    if (questionsArray[currentQuestionIndex].questionType == "Short Answer") {
                                        selectedQuestions.push([questionsArray[currentQuestionIndex].questionID, "SRTA"]);
                                    } else {
                                        selectedQuestions.push([questionsArray[currentQuestionIndex].questionID, "MLCQ"]);
                                    }
                                }
                                document.getElementById("checkboxImage" + currentQuestionIndex).src = "/images/selected.png";
                                document.getElementById('selectedQuestionsField').value = selectedQuestions;
                                document.getElementById('unselectedQuestionsField').value = unselectedQuestions;
                            } else {
                                questionsArray[currentQuestionIndex].userSelected = "notselected.png"

                                //if the question was selected without saving inbetween, remove it from the questions array
                                var i;
                                var indexToRemove = -1;
                                for (i = 0; i < selectedQuestions.length && indexToRemove == -1; i++) {
                                    if (selectedQuestions[i][0] == questionsArray[currentQuestionIndex].questionID) {
                                        indexToRemove = i;
                                    }
                                }

                                if (indexToRemove != -1) {
                                    selectedQuestions.splice(indexToRemove,1);
                                } else {
                                    unselectedQuestions.push(questionsArray[currentQuestionIndex].questionID);
                                }

                                document.getElementById("checkboxImage" + currentQuestionIndex).src = "/images/notselected.png";
                                document.getElementById('unselectedQuestionsField').value = unselectedQuestions;
                                document.getElementById('selectedQuestionsField').value = selectedQuestions;
                            }
                            toggleModalClose();
                        }

                        function windowOnClick(event) {
                            if (event.target === modal) {
                                toggleModal();
                            }
                        }
                        window.addEventListener("click", windowOnClick);